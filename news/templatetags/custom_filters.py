from django import template
import re

register = template.Library()


# Идея: Перебираю слова из кортежа и ищу и делаю замену в исходном тексте
# с помощьЮ \b указаны границы слова (нет проблем с пунктуацией и случаем когда плохое слово является частью хорошего)
# с помощью f интерполирую элемент кортежа в регулярном выражении
# недостаток: Если плохое слово начинается с заглавной буквы, то при замене буква станет маленькой
# в тз это не оговаривалось, поэтому оставлю так
# если это критично, тогда надо не делать замену, а искать позицию вхождения слова, и с этой +1 позиции менять на
# соот. количество *. Т.к. слово может входить несколько раз, то сделать это в цикле

# из ТЗ:'Дополнительно попробуйте сделать проверку, чтобы фильтр цензурирования применялся только к переменным
# строкового типа. Иными словами, если фильтр применяется не к строке, разработчик получает ошибку.'
# для этого добавлена конструкция Try Except

# Регистрируем наш фильтр, чтоб Django понимал,
# что это именно фильтр для шаблонов, а не простая функция.
@register.filter()
def censor(string):
    # список нехороших слов
    badWords = (
        'редиска',
        'сосиска',
        'сарделька',
        'зараза',)
    try:
        for e in badWords:
            #    reg_exp = fr"{e}\b"
            ch = e[0] + (len(e) - 1) * '*'
            # замена(что, на что, где, без учета регистра)
            string = re.sub(fr"\b{e}\b", ch, string, flags=re.IGNORECASE)
    except TypeError:
        string = 'Ошибка типа'
    return string
